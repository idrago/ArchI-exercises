<?xml version="1.0" encoding="UTF-8"?>
<quiz>
  <question type="coderunner">
    <name>
      <text>mcm</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>
Scrivere una procedura RISC-V per il calcolo del minimo comune multiplo 
di due numeri interi positivi  \(a\) e  \(b\),  \(MCM(a,b)\), 
da richiamare nel main, utilizzando la seguente relazione: 
</p>

 \(MCM(a,b) = (a*b) / MCD(a,b)\)

<br/>

Il valore di ritorno deve essere lasciato sul registro \(a0\).

<br/><br/>
<b>\(mcm\) deve utilizzare \(mcd\) sviluppata nell'esercizio precedente.</b>

<br><b>Attenzione:</b>
<ul>
    <li>NON INCOLLARE IL CODICE DI \(mcd\) NELLA RISPOSTA</li>
    <li>Incollare nel campo di sotto soltanto il contenuto della funzione \(mcm\) (in RISC-V)</li>
    <li>Attenzione alle convenzioni di chiamata!</li>
    <li>Usare il seguente codice "main" per sviluppo e debugging nel simulatore RARS</li>
</ul>

<pre>
.globl _start
.data
    num1: .dword 5
    num2: .dword 6
.text
_start:
    # call MCD
    la    a0, num1
    la    a1, num2
    ld    a0, 0(a0)
    ld    a1, 0(a1)     
    jal   ra, mcm

    #exit
    li    a7, 10
    ecall

#****************************************************
# completare la funzione MCM nel campo di sotto
</pre>


]]>
    </text>
    </questiontext>
    <defaultgrade>1</defaultgrade>
    <penalty>0</penalty>
    <hidden>0</hidden>
    <coderunnertype>riscv</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>1</allornothing>
    <penaltyregime>0</penaltyregime>
    <precheck>0</precheck>
    <hidecheck>0</hidecheck>
    <showsource>0</showsource>
    <answerboxlines>18</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload>mcm:</answerpreload>
    <globalextra><![CDATA[
#*******************************************************************************
# main()
#*******************************************************************************
_start:
      # puts numbers on the saved registers
      start_saved_registers_nonleaf

      # call MCM
      la    a0, num1
      la    a1, num2
      ld    a0, 0(a0)
      ld    a1, 0(a1)     
      jal   ra, mcm
      printreg a0, __ra0

      # check whether the saved registers are preserved
      check_saved_registers

#*******************************************************************************
# MCD(a,b)
#
# a0 -> a
# a1 -> b
#*******************************************************************************
mcd:
mcd_while:
      beq     a0, a1, mcd_end
      bge     a1, a0, mcd_else
      sub     a0, a0, a1
      j       mcd_while
mcd_else:
      sub     a1, a1, a0
      j       mcd_while
mcd_end:
      exit_required_leaf_function
      ret


]]>
    </globalextra>
    <useace></useace>
    <resultcolumns></resultcolumns>
    <template></template>
    <iscombinatortemplate></iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer><![CDATA[
#*******************************************************************************
# MCM(a,b)
#
# a0 -> a
# a1 -> b
#*******************************************************************************
mcm:
        addi    sp, sp, -16
        sd      ra, 8(sp)
        sd      s1, 0(sp)

        mul     s1, a0, a1
        jal     ra, mcd         # after this, a0 has mcd
        div     a0, s1, a0

        ld      s1, 0(sp)
        ld      ra, 8(sp)
        addi    sp, sp, 16      # restore the stack pointer
        ret


]]>
    </answer>
    <validateonsave>1</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <hoisttemplateparams>1</hoisttemplateparams>
    <templateparamslang>None</templateparamslang>
    <templateparamsevalpertry>0</templateparamsevalpertry>
    <templateparamsevald>{}</templateparamsevald>
    <twigall>0</twigall>
    <uiplugin></uiplugin>
    <uiparameters></uiparameters>
    <attachments>0</attachments>
    <attachmentsrequired>0</attachmentsrequired>
    <maxfilesize>10240</maxfilesize>
    <filenamesregex></filenamesregex>
    <filenamesexplain></filenamesexplain>
    <displayfeedback>0</displayfeedback>
    <giveupallowed>0</giveupallowed>
    <prototypeextra></prototypeextra>
    <testcases>

<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  num1: .dword 5
  num2: .dword 6

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 30</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  num1: .dword 5
  num2: .dword 6

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  num1: .dword 1
  num2: .dword 5

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 5</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  num1: .dword 1
  num2: .dword 5

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  num1: .dword 5
  num2: .dword 1

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 5</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  num1: .dword 5
  num2: .dword 1

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  num1: .dword 12
  num2: .dword 8

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 24</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  num1: .dword 12
  num2: .dword 8

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  num1: .dword 12
  num2: .dword 9

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 36</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  num1: .dword 12
  num2: .dword 9

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
    </testcases>
  </question>
</quiz>
