<?xml version="1.0" encoding="UTF-8"?>
<quiz>
  <question type="coderunner">
    <name>
      <text>sumarray</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>
Scrivere una procedura \(sumarray\) che calcoli la somma di un array di \(size\) word in memoria. 
</p>

<br/>Il seguente codice in \(C\) realizza \(sumarray\) (convertilo in RISC-V):
<pre>
int sumarray(int[] array, int size) {
    int sum = 0;
    for (int i = 0; i < size; i++) {
        sum += array[i];
    }
    return sum;
}
</pre>

<br/>Come esercizio alternativo, preparare una soluzione ricorsiva seguendo il codice C riportato di seguito:
<pre>
int sumarray(int[] array, int size) {
    if (size == 0) {
        return 0;
    } else {
        return array[size-1] + sumarray(array, size-1);
    }
}
</pre>

<br><b>Attenzione:</b>
<ul>
    <li>Incollare nel campo di sotto soltanto il contenuto della funzione \(sumarray\) (in RISC-V)</li>
    <li>Si prega di fornire solo una soluzione alla volta (ricorsiva o iterativa)</li>
    <li>Attenzione alle convenzioni di chiamata!</li>
    <li>Usare il seguente codice "main" per sviluppo e debugging nel simulatore RARS</li>
</ul>

<pre>
.globl _start
.data
    array: .word  1,2,3,4,5,6,7,8,9,10
    size:  .word  10
    
.text
_start:
    # chiama sumarray
    la   a0, array
    la   a1, size
    lw   a1, 0(a1)
    jal  ra, sumarray
    
    #exit
    li   a7, 10
    ecall

#****************************************************
# completare la funzione sumarray nel campo di sotto

</pre>

]]>
    </text>
    </questiontext>
    <defaultgrade>1</defaultgrade>
    <penalty>0</penalty>
    <hidden>0</hidden>
    <coderunnertype>riscv</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>1</allornothing>
    <penaltyregime>0</penaltyregime>
    <precheck>0</precheck>
    <hidecheck>0</hidecheck>
    <showsource>0</showsource>
    <answerboxlines>18</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload>sumarray:</answerpreload>
    <globalextra><![CDATA[
#*******************************************************************************
# main()
#*******************************************************************************
_start:    
    # puts numbers on the saved registers
    start_saved_registers_leaf

    # call sumarray
    la   a0, array
    la   a1, size
    lw   a1, 0(a1)
    jal  ra, sumarray
    printreg a0, __ra0

    # check whether the saved registers are preserved
    check_saved_registers


]]>
    </globalextra>
    <useace></useace>
    <resultcolumns></resultcolumns>
    <template></template>
    <iscombinatortemplate></iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer><![CDATA[
################################################################################
# Procedure sumarray(v) - interactive sum
# a0 -> v address
# a1 -> v size
################################################################################
sumarray:
    addi  sp, sp, -8
    sd    ra, 0(sp)

    li    t0, 0                     # final sum
sumarray_loop:
    ble   a1, zero, sumarray_end    # if a1 <= 0 goto end
    lw    t1, 0(a0)                 # first element of the vector
    add   t0, t0, t1                # sum the element
    addi  a1, a1, -1                # decrement the counter
    addi  a0, a0, 4                 # move to the next word in the array
    j     sumarray_loop    

sumarray_end:
    mv    a0, t0                    # load the result
    ld    ra, 0(sp)                 # restore the return address
    addi  sp, sp, 8                 # restore the stack pointer
    ret


]]>
    </answer>
    <validateonsave>1</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <hoisttemplateparams>1</hoisttemplateparams>
    <templateparamslang>None</templateparamslang>
    <templateparamsevalpertry>0</templateparamsevalpertry>
    <templateparamsevald>{}</templateparamsevald>
    <twigall>0</twigall>
    <uiplugin></uiplugin>
    <uiparameters></uiparameters>
    <attachments>0</attachments>
    <attachmentsrequired>0</attachmentsrequired>
    <maxfilesize>10240</maxfilesize>
    <filenamesregex></filenamesregex>
    <filenamesexplain></filenamesexplain>
    <displayfeedback>0</displayfeedback>
    <giveupallowed>0</giveupallowed>
    <prototypeextra></prototypeextra>
    <testcases>

<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  size:  .word 16
  array: .word 2, 1, 7, 1, 2, 2, 2, 1, 12, 1, 7, 1, 2, 2, 2, 1        

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 46</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  size:  .word 16
  array: .word 2, 1, 7, 1, 2, 2, 2, 1, 12, 1, 7, 1, 2, 2, 2, 1        

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  size:  .word 10
  array: .word 1,2,3,4,5,6,7,8,9,10

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 55</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  size:  .word 10
  array: .word 1,2,3,4,5,6,7,8,9,10

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  size:  .word 10
  array: .word -1,-2,-3,-4,-5,-6,-7,-8,-9,-10

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: -55</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  size:  .word 10
  array: .word -1,-2,-3,-4,-5,-6,-7,-8,-9,-10

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  size:  .word 8
  array: .word 3, 1, 4, 1, 5, 9, 2, 6

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 31</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  size:  .word 8
  array: .word 3, 1, 4, 1, 5, 9, 2, 6

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  size:  .word 5
  array: .word 1, 2, 3, 4, 5

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 15</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  size:  .word 5
  array: .word 1, 2, 3, 4, 5

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  size:  .word 1
  array: .word 2

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 2</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  size:  .word 1
  array: .word 2

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  size:  .word 0
  array: .space 1

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 0</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  size:  .word 0
  array: .space 1

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
    </testcases>
  </question>
</quiz>
