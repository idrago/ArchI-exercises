<?xml version="1.0" encoding="UTF-8"?>
<quiz>
  <question type="coderunner">
    <name>
      <text>serief</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>
Utilizzando il linguaggio assemblativo RISC-V, scrivere un metodo ricorsivo \(serief\) che riceva come parametro n, intero strettamente positivo (non è necessario verificare se il valore del parametro attuale è veramente positivo), restituendo il valore dell'n-esimo elemento della serie numerica così definita:
</p>

\(f(1) = 1\)<br/>
\(f(2) = 1\)<br/>
\(f(3) = 1\)<br/>
\(f(x) = f(x-1) + f(x-2) + f(x-3)\), per \(x>3\)<br/>

<br/>
Il valore di ritorno deve essere lasciato sul registro \(a0\).

<br><b>Attenzione:</b>
<ul>
    <li>Incollare nel campo di sotto soltanto il contenuto della funzione \(serief\) (in RISC-V)</li>
    <li>Attenzione alle convenzioni di chiamata!</li>
    <li>Usare il seguente codice "main" per sviluppo e debugging nel simulatore RARS</li>
</ul>

<pre>
.globl _start
.data
    num: .dword 10        
.text
_start:
    # call serief
    la    a0, num
    jal   ra, serief

    #exit
    li    a7, 10
    ecall

#****************************************************
# completare la funzione serief nel campo di sotto
</pre>
]]>
    </text>
    </questiontext>
    <defaultgrade>1</defaultgrade>
    <penalty>0</penalty>
    <hidden>0</hidden>
    <coderunnertype>riscv</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>1</allornothing>
    <penaltyregime>0</penaltyregime>
    <precheck>0</precheck>
    <hidecheck>0</hidecheck>
    <showsource>0</showsource>
    <answerboxlines>18</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload>serief:</answerpreload>
    <globalextra><![CDATA[
#*******************************************************************************
# main()
#*******************************************************************************
_start:
      # puts numbers on the saved registers
      start_saved_registers_leaf

      # call serief
      la    a0, num
      lw    a0, 0(a0)
      jal   ra, serief
      printreg a0, __ra0

      # check whether the saved registers are preserved
      check_saved_registers



]]>
    </globalextra>
    <useace></useace>
    <resultcolumns></resultcolumns>
    <template></template>
    <iscombinatortemplate></iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer><![CDATA[
#*******************************************************************************
# serief()
# f(1) = 1
# f(2) = 1
# f(3) = 1
# f(x) = f(x-1) + f(x-2) + f(x-3), for (x > 3)
#*******************************************************************************
serief:
      li    t0, 3
      bgt   a0, t0, serief_recursion
      li    a0, 1
      ret

serief_recursion:
      addi sp, sp, -24
      sd   ra, 0(sp)
      sd   s2, 8(sp)
      sd   s1, 16(sp)

      # f(x-1)
      addi  s2, a0, 0
      addi  a0, s2, -1
      jal   ra, serief
      add   s1, a0, zero

      # f(x-2)
      addi  a0, s2, -2
      jal   ra, serief
      add   s1, s1, a0

      # f(x-3)
      addi  a0, s2, -3
      jal   ra, serief
      add   a0, s1, a0

      ld   ra, 0(sp)
      ld   s2, 8(sp)
      ld   s1, 16(sp)
      addi sp, sp, 24
      ret


]]>
    </answer>
    <validateonsave>1</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <hoisttemplateparams>1</hoisttemplateparams>
    <templateparamslang>None</templateparamslang>
    <templateparamsevalpertry>0</templateparamsevalpertry>
    <templateparamsevald>{}</templateparamsevald>
    <twigall>0</twigall>
    <uiplugin></uiplugin>
    <uiparameters></uiparameters>
    <attachments>0</attachments>
    <attachmentsrequired>0</attachmentsrequired>
    <maxfilesize>10240</maxfilesize>
    <filenamesregex></filenamesregex>
    <filenamesexplain></filenamesexplain>
    <displayfeedback>0</displayfeedback>
    <giveupallowed>0</giveupallowed>
    <prototypeextra></prototypeextra>
    <testcases>

<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  num: .dword 1

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 1</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  num: .dword 1

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  num: .dword 2

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 1</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  num: .dword 2

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  num: .dword 3

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 1</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  num: .dword 3

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  num: .dword 4

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 3</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  num: .dword 4

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  num: .dword 5

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 5</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  num: .dword 5

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  num: .dword 6

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 9</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  num: .dword 6

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  num: .dword 7

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 17</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  num: .dword 7

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  num: .dword 8

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 31</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  num: .dword 8

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
    </testcases>
  </question>
</quiz>
