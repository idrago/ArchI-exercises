<?xml version="1.0" encoding="UTF-8"?>
<quiz>
  <question type="coderunner">
    <name>
      <text>strchridx</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[
<p>
Scrivere una procedura RISC-V \(strchridx(str, c)\) per restituire <b>l'indice</b> della prima occorrenza di \(c\) in \(str\).  
\(strchridx(str, c)\) restituisce -1 se \(c\) non Ã¨ presente in \(str\).
</p>

Il seguente codice in \(C\) realizza \(strchridx\) (convertilo in RISC-V):

<pre>
unsigned long strchridx(char *str, char c) {
    unsigned long i = 0;
    while (str[i] != '\0' and str[i] != 'c') { 
        i++;
    }
    if (str[i] == '\0') { 
        return -1;
    } else { 
        return i;
    }
}
</pre>

Il valore di ritorno deve essere lasciato sul registro \(a0\).

<br><b>Attenzione:</b>
<ul>
    <li>Incollare nel campo di sotto soltanto il contenuto della funzione \(strchridx\) (in RISC-V)</li>
    <li>Attenzione alle convenzioni di chiamata!</li>
    <li>Usare il seguente codice "main" per sviluppo e debugging nel simulatore RARS</li>
</ul>

<pre>
.globl _start
.data
    str:  .string "my long string"
    c:    .byte 'g'
.text
_start:
    # call strchridx
    la   a0, str
    la   a1, c
    lb   a1, 0(a1)
    jal  ra, strchridx

    #exit
    li   a7, 10
    ecall

#****************************************************
# completare la funzione strchr nel campo di sotto
</pre>


]]>
    </text>
    </questiontext>
    <defaultgrade>1</defaultgrade>
    <penalty>0</penalty>
    <hidden>0</hidden>
    <coderunnertype>riscv</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>1</allornothing>
    <penaltyregime>0</penaltyregime>
    <precheck>0</precheck>
    <hidecheck>0</hidecheck>
    <showsource>0</showsource>
    <answerboxlines>18</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload>strchridx:</answerpreload>
    <globalextra><![CDATA[
#*******************************************************************************
# main()
#*******************************************************************************
_start:
      # puts numbers on the saved registers
      start_saved_registers_leaf

      # call strchridx
      la   a0, str
      la   a1, c
      lbu  a1, 0(a1)
      jal  ra, strchridx
      printreg a0, __ra0

      # check whether the saved registers are preserved
      check_saved_registers


]]>
    </globalextra>
    <useace></useace>
    <resultcolumns></resultcolumns>
    <template></template>
    <iscombinatortemplate></iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer><![CDATA[
#*******************************************************************************
# strchridx
#
# a0 - str
# a1 = c
#*******************************************************************************
strchridx:
      addi t0, zero, 0
strchridx_loop:      
      lbu  t1, 0(a0)
      beq  t1, a1, strchridx_end
      addi a0, a0, 1
      addi t0, t0, 1
      bne  t1, zero, strchridx_loop
      addi a0, zero, -1
      ret
strchridx_end: 
      addi a0, t0, 0
      ret


]]>
    </answer>
    <validateonsave>1</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <hoisttemplateparams>1</hoisttemplateparams>
    <templateparamslang>None</templateparamslang>
    <templateparamsevalpertry>0</templateparamsevalpertry>
    <templateparamsevald>{}</templateparamsevald>
    <twigall>0</twigall>
    <uiplugin></uiplugin>
    <uiparameters></uiparameters>
    <attachments>0</attachments>
    <attachmentsrequired>0</attachmentsrequired>
    <maxfilesize>10240</maxfilesize>
    <filenamesregex></filenamesregex>
    <filenamesexplain></filenamesexplain>
    <displayfeedback>0</displayfeedback>
    <giveupallowed>0</giveupallowed>
    <prototypeextra></prototypeextra>
    <testcases>

<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  str:  .string "my long string"
  c:    .byte 'm'

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 0</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  str:  .string "my long string"
  c:    .byte 'm'

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  str:  .string "my long string"
  c:    .byte 'g'

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 6</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  str:  .string "my long string"
  c:    .byte 'g'

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  str:  .string "my long string"
  c:    .byte '1'

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: -1</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  str:  .string "my long string"
  c:    .byte '1'

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  str:  .string ""
  c:    .byte 'y'

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: -1</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  str:  .string ""
  c:    .byte 'y'

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
<testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.00">
    <testcode>
        <text><![CDATA[
.section .data
  str:  .string "my long"
  c:    .byte 'g'

        ]]>
        </text>
    </testcode>
    <stdin>
        <text></text>
    </stdin>
    <expected>
        <text>a0: 6</text>
    </expected>
    <extra>
        <text><![CDATA[
.section .data
  str:  .string "my long"
  c:    .byte 'g'

        ]]></text>
    </extra>
    <display>
        <text>SHOW</text>
    </display>
</testcase>
    </testcases>
  </question>
</quiz>
